version: '3'

networks: 
  redis_cluster_net: 
    driver: bridge 
    ipam: 
      driver: default 
      config: 
        - subnet: 173.18.0.0/16 
  uno_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.13.0.0/16

services:
  service_discovery:
    build: ./ServiceDiscovery/service-discovery
    # image: almightycrickitycrick/service_discovery
    ports:
      - "8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - uno_net
  
  gateway:
    build: ./Gateway/gateway
    # image: almightycrickitycrick/gateway
    ports:
      - "8080:8080"
      - "7070"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - service_discovery
    networks:
      - uno_net

  ranking_service:
    build: ./ranking_service
    # image: almightycrickitycrick/ranking_service
    ports: 
      - "8080"
    depends_on:
      - ranking_service_database
      - cluster_initiator
      - service_discovery
      - gateway
    environment:
      POSTGRES_HOST: ranking_service_repo
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - uno_net

  
  game_service:
    build: ./game_service
    # image: almightycrickitycrick/game_service
    ports:
      - "7070"
    depends_on:
      - game_history_database
      - cluster_initiator
      - service_discovery
      - gateway
    environment:
      POSTGRES_HOST: game_history_database
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: dnsrr
    networks:
      - uno_net


  ranking_service_database:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: ranking_service_repo
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_user
    volumes:
      - postgres_ranking_data:/var/lib/postgresql/data
      - ./my-postgres.conf:/var/lib/postgresql/data/postgresql.conf
      - ./my-pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - data-slave:/var/lib/postgresql/data-slave
    ports:
      - "5432"
    networks:
      - uno_net

  initialize_db:
    image: postgres:latest
    depends_on:
      - ranking_service_database
    environment:
      PGPASSWORD: pass
    command: >
      bash -c "psql -h ranking_service_database -U user -d ranking_service_repo -c 
      \"CREATE USER repl_user REPLICATION LOGIN ENCRYPTED PASSWORD 'repl_user'; 
      GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO repl_user; 
      ALTER USER repl_user WITH SUPERUSER;
      SELECT pg_create_physical_replication_slot('replication_slot');\""
    networks:
      - uno_net

  ranking_service_database_slave_1:
    image: postgres:latest
    environment:
      POSTGRES_USER: repl_user
      POSTGRES_PASSWORD: repl_user
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_MASTER_HOST: ranking_service_database
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
      PGUSER: repl_user
      PGPASSWORD: repl_user
    ports:
      - "5432"
    volumes:
      - data-slave:/var/lib/postgresql/data
    command: |
      bash -c "
      until pg_basebackup -D /var/lib/postgresql/data-slave --host=ranking_service_database --port=5432 -S replication_slot -X stream -P -U repl_user -Fp -R
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    networks:
      - uno_net
    depends_on:
      - ranking_service_database

  # ranking_service_database_slave_2:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: repl_user
  #     POSTGRES_PASSWORD: repl_user
  #     POSTGRESQL_REPLICATION_MODE: slave
  #     POSTGRESQL_MASTER_HOST: ranking_service_database
  #     POSTGRESQL_MASTER_PORT_NUMBER: 5432
  #     POSTGRESQL_REPLICATION_USER: repl_user
  #     POSTGRESQL_REPLICATION_PASSWORD: repl_user
  #   ports:
  #     - "5432"
  #   networks:
  #     - uno_net
  #   depends_on:
  #     - ranking_service_database

  # uno_warehouse_database:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: pass
  #     POSTGRES_DB: warehouse_repo
  #   volumes:
  #     - postgres_warehouse_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432"
  #   networks:
  #     - uno_net

  redis_cache_node_1:
    image: redis:7-alpine
    restart: always
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --appendonly no --cluster-node-timeout 5000 --protected-mode no
    ports:
      - '6379'
    volumes: 
      - redis_cache_node1:/data
    networks: 
      redis_cluster_net: 
        ipv4_address: 173.18.0.5
      uno_net:
    

  redis_cache_node_2:
    image: redis:7-alpine
    restart: always
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --appendonly no --cluster-node-timeout 5000 --protected-mode no
    ports:
      - '6379'
    volumes: 
      - redis_cache_node2:/data
    networks: 
      redis_cluster_net: 
        ipv4_address: 173.18.0.6
      uno_net:
  
  redis_cache_node_3:
    image: redis:7-alpine
    restart: always
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --appendonly no --cluster-node-timeout 5000 --protected-mode no 
    ports:
      - '6379'
    volumes: 
      - redis_cache_node3:/data
    networks: 
      redis_cluster_net: 
        ipv4_address: 173.18.0.7
      uno_net:
  
  cluster_initiator: 
    image: redis:latest 
    command: redis-cli --cluster create 173.18.0.5:6379 173.18.0.6:6379 173.18.0.7:6379 --cluster-replicas 0 --cluster-yes 
    ports:
      - '3090:3090'
    depends_on: 
      - redis_cache_node_1
      - redis_cache_node_2
      - redis_cache_node_3

    networks: 
      redis_cluster_net: 
        ipv4_address: 173.18.0.11 

  game_history_database:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: game_history_repo
    volumes:
      - postgres_game_data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - uno_net

  # prometheus:
  #   image: prom/prometheus:latest
  #   command:
  #     - --storage.tsdb.retention.time=7d
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #     - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
  #     - prometheus_data:/prometheus
  #   networks:
  #     - uno_net
  #   ports:
  #     - 9090:9090
  
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - uno_net
  #   volumes:
  #     - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
  #     - ./grafana/datasources:/etc/grafana/provisioning/datasources
  #     - grafana_data:/var/lib/grafana


volumes:
  postgres_ranking_data:
  postgres_game_data:
  data-slave:
  postgres_warehouse_data:
  redis_cache_node1:
  redis_cache_node2:
  redis_cache_node3:
  prometheus_data: 
  grafana_data: 